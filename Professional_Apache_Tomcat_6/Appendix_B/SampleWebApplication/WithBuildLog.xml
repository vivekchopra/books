<!-- Ant build file for a sample web application with build logs -->
<project name="SampleWebApplication" default="compile" basedir=".">
     <property name="tomcat.home" value="D:\software\tomcat\apache-tomcat-6.0.1"/>
     <property name="app.name"      value="sampleWebapp"/>
     <property name="context.path"  value="/${app.name}"/>
     <property name="src.home"      value="${basedir}/src"/>
     <property name="web.home"      value="${basedir}/web"/>
     <property name="conf.home"     value="${basedir}/conf"/>
     <property name="lib.home"      value="${basedir}/lib"/>
     <property name="docs.home"     value="${basedir}/docs"/>
     <property name="build.home"    value="${basedir}/build"/>
     <property name="dist.home"     value="${basedir}/dist"/>
     <property name="war.file"      value="${dist.home}/${app.name}.war"/>


     <!-- Configure properties to access the Tomcat Manager application -->
     <property name="url"      value="http://localhost:8080/manager"/>
     <property name="username" value="tomcat"/>
     <property name="password" value="tomcat"/>

     <!-- Classpath for Tomcat ant tasks -->
     <path id="deployer.classpath">
         <fileset dir="${tomcat.home}/lib">
             <include name="*.jar"/>
         </fileset>
     </path>

     <!-- Configure the custom Ant tasks for the Manager application -->
     <typedef name="list" classname="org.apache.catalina.ant.ListTask" 
              classpathref="deployer.classpath" /> 
     <typedef name="deploy" classname="org.apache.catalina.ant.DeployTask" 
              classpathref="deployer.classpath" /> 
     <typedef name="start" classname="org.apache.catalina.ant.StartTask" 
              classpathref="deployer.classpath" /> 
     <typedef name="reload" classname="org.apache.catalina.ant.ReloadTask" 
              classpathref="deployer.classpath" /> 
     <typedef name="stop" classname="org.apache.catalina.ant.StopTask" 
              classpathref="deployer.classpath" /> 
     <typedef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" 
              classpathref="deployer.classpath" /> 

     <!-- ====== All initializations: Classpath, directory structure ====== -->
     <target name="init">
         <mkdir  dir="${build.home}"/>
         <mkdir  dir="${docs.home}"/>
         <mkdir dir="${dist.home}"/>

         <!-- Classpath for compiling web application, generating javadocs -->
         <path id="classpath">
             <fileset dir="${lib.home}">
                 <include name="*.jar"/>
             </fileset>
             <fileset dir="${tomcat.home}/lib">
                 <include name="servlet-api.jar"/>
             </fileset>
         </path>
         <property name="classpath" refid="classpath"/>


     </target>

     <!-- ====== Compilation  ====== -->
     <target name="compile" depends="init">
         <record name="build.log" action="start" 
                 loglevel="verbose" append="yes"/>
         <echo message="Classpath set to ${classpath}"/>
         <javac srcdir="${src.home}" 
                destdir="${build.home}" 
                debug="true" 
                classpath="${classpath}"
                deprecation="true">
         </javac>

         <!-- Copy all property files -->
         <copy todir="${build.home}">
             <fileset dir="${conf.home}"/>
         </copy>

         <record name="build.log" action="stop"/>
     </target>

     <!-- ====== Create a distributable WAR file ====== -->
     <target name="dist" depends="compile"  
             description="Creates the deployable WAR file">
         <record name="build.log" action="start" 
                 loglevel="verbose" append="yes"/>
         <war destfile="${war.file}" 
              webxml="${web.home}/WEB-INF/web.xml">
             <fileset dir="${web.home}" excludes="**/web.xml" />
             <lib dir="${lib.home}"/>
             <classes dir="${build.home}"/>
         </war>
         <record name="build.log" action="stop"/>
     </target>

     <!-- ====== Create documentation (javadocs) ====== -->
     <target name="javadoc" depends="init" description="Creates the Javadocs for the project">
         <javadoc sourcepath="${src.home}"
                  packagenames="com.foobar.*"
                  classpath="${classpath}"
                  destdir="${docs.home}"
                  windowtitle="Javadoc for the Sample Web Application (TM)">
         </javadoc>
     </target>

     <!-- ====== Clean Target ====== -->
     <target name="clean" 
             description="Cleanup- deletes everything generated by the ant script">
         <delete dir="${build.home}"/>
         <delete dir="${dist.home}"/>
         <delete dir="${docs.home}"/>
         <delete file="build.log"/>
     </target>

     <!-- ====== Manage web application ====== -->
     <target name="deploy" depends="dist" description="Deploy web application">
         <deploy url="${url}" username="${username}" password="${password}"
                 path="${context.path}" war="${war.file}" update="true" />
     </target>

     <target name="undeploy" description="Undeploy web application">
         <undeploy url="${url}" username="${username}" password="${password}"
                   path="${context.path}"/>
     </target>

     <target name="start" description="Start web application">
         <start url="${url}" 
                username="${username}" password="${password}"
                path="${context.path}"/>
     </target>

     <target name="reload" description="Reload web application">
         <reload url="${url}" username="${username}" password="${password}"
                 path="${context.path}"/>
     </target>

     <target name="stop" description="Stop web application">
         <stop url="${url}" username="${username}" password="${password}"
               path="${context.path}"/>
     </target>

     <target name="list" description="List all web applications on server">
         <list url="${url}" 
               username="${username}" password="${password}"/>
     </target>

     <!-- ====== All Target ====== -->
     <target name="all" 
             depends="clean, init, compile, dist"
             description="Builds the web application and war file"/>

</project>
